C++ Script for Web Application Penetration Testing
This document includes a C++ script that sends HTTP requests to various web servers. The script is designed as a foundation for web application penetration testing across different platforms such as Azure, IIS, Tomcat, and CMS-hosted servers. The code demonstrates basic GET request operations using libcurl in C++. You can expand the script to include more platform-specific tests and security checks.
C++ Script

#include <iostream>
#include <curl/curl.h>

size_t WriteCallback(void* contents, size_t size, size_t nmemb, std::string* s) {
   size_t totalSize = size * nmemb;
   s->append((char*)contents, totalSize);
   return totalSize;
}

void sendGetRequest(const std::string& url) {
   CURL* curl;
   CURLcode res;
   std::string response;

   curl_global_init(CURL_GLOBAL_DEFAULT);
   curl = curl_easy_init();

   if(curl) {
       curl_easy_setopt(curl, CURLOPT_URL, url.c_str());
       curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, WriteCallback);
       curl_easy_setopt(curl, CURLOPT_WRITEDATA, &response);

       res = curl_easy_perform(curl);
       if(res != CURLE_OK) {
           std::cerr << "Request failed: " << curl_easy_strerror(res) << std::endl;
       } else {
           std::cout << "Response from " << url << ":" << std::endl;
           std::cout << response << std::endl;
       }

       curl_easy_cleanup(curl);
   }
   curl_global_cleanup();
}

int main() {
   std::string urls[] = {
       "http://example.com",
       "http://your-azure-app-url",
       "http://your-iis-server",
       "http://your-tomcat-server",
       "http://your-cms-url"
   };

   for(const auto& url : urls) {
       std::cout << "Sending GET request to: " << url << std::endl;
       sendGetRequest(url);
       std::cout << "----------------------------------------" << std::endl;
   }

   return 0;
}